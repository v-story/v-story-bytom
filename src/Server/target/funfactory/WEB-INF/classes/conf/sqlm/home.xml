<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlm SYSTEM "http://10.95.26.153/dtd/sqlm_2_1.dtd" [
]>
<sqlm   ver="2.1">
	<module name="home" desc="SNS 홈">
	
<!-- listSnsHomePost4jqGrid -->	
		<sql name="home.followStarContSeq_StarCont" execute="Select" type="PreparedStatement" desc="팔로우 스타컨텐츠 시퀀스 얻기">
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT	GROUP_CONCAT(STAR_CONT_SEQ SEPARATOR ',') AS STR_STAR_CONT_SEQ FROM	TB_STAR_CONT_FOLLOW
				WHERE ACCOUNTPK = $ACCOUNTPK
			</puts>
		</sql>
		<!-- 게시물 개수   TB_HOME_POST 개수는 TB_COUNTER의 POST_CNT로 대체해도 무방할거 같음-->
		<sql name="home.homePostListTotalCntV2" execute="Select" type="PreparedStatement" desc="SNS주인 + 팔로우유저 게시물 전체 수">
			<param name="ACCOUNTPK" 		required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<param name="STAR_CONT_SEQ" 	required="no" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					COUNT(A.POST_SEQ) CNT
				FROM
					(
					SELECT
						POST_SEQ
					FROM
						TB_HOME_POST
					WHERE
						ACCOUNTPK = $ACCOUNTPK
			</puts>
			<puts>
					UNION ALL
					SELECT
						POST_SEQ
					FROM
						TB_STAR_CONT_POST
					WHERE
						STAR_CONT_SEQ IN ($STAR_CONT_SEQ)
					GROUP BY POST_SEQ
			</puts>
			<puts>
					) A
			</puts>
		</sql>	
		<sql name="home.pagePostSeq_SNS" execute="Select" type="PreparedStatement" desc="게시물 시퀀스 얻기">
			<param name="ACCOUNTPK" 		required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<param name="STAR_CONT_SEQ" 	required="no" 	desc="게시물 검색할 유저 시퀀스" />
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<puts>
				SELECT
					IFNULL(GROUP_CONCAT(B.POST_SEQ),0) AS STR_POST_SEQ
				FROM
					(
					SELECT
						A.POST_SEQ
					FROM
						(
						SELECT
							POST_SEQ
						FROM
							TB_HOME_POST
						WHERE
							ACCOUNTPK = $ACCOUNTPK
			</puts>
			<puts>
						UNION ALL
						SELECT
							DISTINCT POST_SEQ
						FROM
							TB_STAR_CONT_POST
						WHERE
							STAR_CONT_SEQ IN ($STAR_CONT_SEQ)
						<!--  GROUP BY POST_SEQ ORDER BY NULL -->
			</puts>
			<puts>
						) A
					ORDER BY A.POST_SEQ DESC
					LIMIT $OFFSET, $ROWS						
					) B
			</puts>
		</sql>
		<sql name="home.getPostUserInfo_SNS" execute="Select" type="PreparedStatement" desc="post_seq 기준으로 유저 정보 얻기">
			<param name="POST_SEQ" 			required="yes" 	desc="" />
			<puts>
				SELECT
					A.POST_SEQ, 
					A.ACCOUNTPK, 
					B.ID, 
					IFNULL(B.PROF_PIC_NM, 'profile_default.png') AS PROF_PIC_NM,
					B.AVATAR_CD
				FROM
					(
					SELECT
						POST_SEQ, ACCOUNTPK
					FROM
						TB_HOME_POST
					WHERE 
						POST_SEQ IN ($POST_SEQ)
					) A
					LEFT OUTER JOIN
					TB_USER B
					ON A.ACCOUNTPK = B.ACCOUNTPK			
			</puts>
		</sql>
		<sql name="home.homePostList4jqGridV2" execute="Select" type="PreparedStatement" desc="SNS주인 + 팔로우유저 게시물">
			<param name="ACCOUNTPK"			required="yes" 	desc="유저 시퀀스" />
			<param name="POST_SEQ" 			required="yes" 	desc="게시물  시퀀스" />
			<puts>
				SELECT
					X1.*
					,IFNULL(X2.FILE_NM_S, '') AS FILE_NM_S
					,IFNULL(X2.FILE_TYPE_S, '') AS FILE_TYPE_S
					,IF(X3.SMILE_SEQ IS NULL, 0, 1) AS SMILE
					,IF(X4.HEART_SEQ IS NULL, 0, 1) AS HEART
				FROM
					(
					SELECT
						POST_SEQ,
						CONT,
						HEART_CNT,
						SMILE_CNT,
						COMMENT_CNT,
						TIMESTAMPDIFF(HOUR, REG_TIME, NOW()) AS DIFF_TIME,
						REG_TIME
					FROM
						TB_POST
					WHERE 
						POST_SEQ IN ($POST_SEQ)
					) X1
					LEFT OUTER JOIN
					(
					SELECT 
						POST_SEQ, 
						GROUP_CONCAT(FILE_NM ORDER BY FILE_NUM ASC) AS FILE_NM_S, 
						GROUP_CONCAT(FILE_TYPE ORDER BY FILE_NUM ASC) AS FILE_TYPE_S 
					FROM 
						TB_FILE_INFO 
					WHERE 
						POST_SEQ IN ($POST_SEQ) 
					GROUP BY POST_SEQ
					) X2
					ON X1.POST_SEQ = X2.POST_SEQ
					LEFT OUTER JOIN
					TB_SMILE_HIST X3
					ON X1.POST_SEQ = X3.POST_SEQ AND X3.ACCOUNTPK = $ACCOUNTPK
					LEFT OUTER JOIN
					TB_HEART_HIST X4
					ON X1.POST_SEQ = X4.POST_SEQ AND X4.ACCOUNTPK = $ACCOUNTPK
				<!-- ORDER BY X1.POST_SEQ DESC -->
				ORDER BY FIELD(X1.POST_SEQ, $POST_SEQ)
			</puts>
		</sql>
		
		
<!-- listSnsHomeComment4jqGrid -->		
		<!-- 댓글 개수 -->
		<sql name="home.homeCommentListTotalCnt" execute="Select" type="PreparedStatement" desc="SNS주인 + 팔로우유저 게시물 전체 수">
			<param name="ACCOUNTPK" 	required="yes" 	desc="유저 시퀀스" />
			<param name="POST_SEQ" 		required="yes" 	desc="게시물 시퀀스" />
			<puts>
				SELECT
					COUNT(*) 
				FROM
					TB_HOME_COMMENT
				WHERE 1=1
					<!-- AND ACCOUNTPK = $ACCOUNTPK -->
					AND POST_SEQ = $POST_SEQ
			</puts>
		</sql>	
		<sql name="home.pageCommentSeq_SNS" execute="Select" type="PreparedStatement" desc="댓글 시퀀스 얻기">
			<param name="ACCOUNTPK" 		required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<param name="POST_SEQ" 			required="yes" 	desc="" />
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<puts>
				SELECT
					GROUP_CONCAT(B.COMMENT_SEQ ORDER BY B.COMMENT_SEQ DESC) AS STR_COMMENT_SEQ
				FROM
					(
					SELECT
						A.*
					FROM
						(
							SELECT
								COMMENT_SEQ
							FROM
								TB_HOME_COMMENT
							WHERE POST_SEQ = $POST_SEQ
						) A
					ORDER BY A.COMMENT_SEQ DESC
					LIMIT $OFFSET, $ROWS
					) B
			</puts>
		</sql>	
		<sql name="home.getCommentUserInfo_SNS" execute="Select" type="PreparedStatement" desc="post_seq 기준으로 유저 정보 얻기">
			<param name="COMMENT_SEQ" 			required="yes" 	desc="" />
			<puts>
				SELECT
					A.COMMENT_SEQ, 
					A.ACCOUNTPK, 
					B.ID, 
					IFNULL(B.PROF_PIC_NM, 'profile_default.png') AS PROF_PIC_NM
				FROM
					(
					SELECT
						COMMENT_SEQ, 
						ACCOUNTPK
					FROM
						TB_HOME_COMMENT
					WHERE 
						COMMENT_SEQ IN ($COMMENT_SEQ)
					) A
					LEFT OUTER JOIN
					TB_USER B
					ON A.ACCOUNTPK = B.ACCOUNTPK			
			</puts>
		</sql>	
		<sql name="home.homeCommentList4jqGrid" execute="Select" type="PreparedStatement" desc="SNS주인 + 팔로우유저 게시물">
			<param name="COMMENT_SEQ" 			required="yes" 	desc="게시물 시퀀스" />
			<puts>
				SELECT
					A.*
					,IF(B.COMMENT_SMILE_SEQ IS NULL, 0, 1) AS SMILE
					,IF(C.COMMENT_HEART_SEQ IS NULL, 0, 1) AS HEART
				FROM
					(
					SELECT
						COMMENT_SEQ,
						POST_SEQ,
						CONT,
						DEPTH,
						TIMESTAMPDIFF(HOUR, REG_TIME, NOW()) AS DIFF_TIME,
						REG_TIME
					FROM
						TB_COMMENT
					WHERE 1=1
						AND COMMENT_SEQ IN ($COMMENT_SEQ)
					<!-- ORDER BY COMMENT_SEQ DESC -->
					) A
					LEFT OUTER JOIN
					TB_COMMENT_SMILE_HIST B
					ON A.COMMENT_SEQ = B.COMMENT_SEQ
					LEFT OUTER JOIN
					TB_COMMENT_HEART_HIST C
					ON A.COMMENT_SEQ = C.COMMENT_SEQ
				ORDER BY FIELD(A.COMMENT_SEQ, $COMMENT_SEQ)
			</puts>
		</sql>
		
		
<!-- regHeartSnsHomePost -->		
		<sql name="home.getAccountPkByPostSeq" execute="Select" type="PreparedStatement" desc="">
			<puts>
				SELECT
					ACCOUNTPK
				FROM
					TB_HOME_POST
				WHERE 1=1
					AND POST_SEQ = :POST_SEQ
			</puts>
		</sql>	
		<sql name="home.regHeart" execute="Update" type="PreparedStatement" desc="하트 등록">
			<puts>
				INSERT INTO TB_HEART_HIST (ACCOUNTPK, POST_SEQ, FRND_ACCOUNTPK) SELECT :ACCOUNTPK, :POST_SEQ, :FRND_ACCOUNTPK FROM DUAL
                WHERE NOT EXISTS ( SELECT * FROM TB_HEART_HIST WHERE ACCOUNTPK = :ACCOUNTPK AND POST_SEQ = :POST_SEQ )
			</puts>
		</sql>
		<sql name="home.getStarContSeq" execute="Select" type="PreparedStatement" desc="스타컨텐츠에 등록되어있는지 체크">
			<puts>
				SELECT 
					<!-- STAR_CONT_SEQ -->
					GROUP_CONCAT(STAR_CONT_SEQ) AS STR_STAR_CONT_SEQ 
				FROM 
					TB_STAR_CONT_POST
				WHERE 1=1
					AND POST_SEQ = :POST_SEQ
			</puts>
		</sql>	
		<sql name="home.modStarContHeartCnt_StarCont" execute="Update" type="PreparedStatement" desc="스타컨텐츠 하트개수 증가 또는 감소">
			<param name="STAR_CONT_SEQ" 	required="yes" 	desc="" />
			<param name="CNT" 	required="yes" 	desc="" />
			<puts>
				UPDATE TB_STAR_CONT_COUNTER SET
					<!-- HEART_CNT = HEART_CNT + :CNT -->
					HEART_CNT = HEART_CNT + $CNT
				WHERE
					<!-- STAR_CONT_SEQ = :STAR_CONT_SEQ -->
					STAR_CONT_SEQ IN ($STAR_CONT_SEQ)
			</puts>
		</sql>
		<sql name="home.modHeartInc_Account" execute="Update" type="PreparedStatement" desc="하트 수정">
			<param name="FRND_ACCOUNTPK" 	required="yes" 	desc="유저 시퀀스" />
			<param name="CNT" 			required="yes" 	desc="" />
			<puts>
				UPDATE TB_CURRENCY_INFO SET
					HEART_CNT = HEART_CNT + $CNT
				WHERE
					ACCOUNTPK = $FRND_ACCOUNTPK
			</puts>
		</sql>	
		<sql name="home.delHeart" execute="Update" type="PreparedStatement" desc="하트 취소">
			<puts>
				DELETE FROM TB_HEART_HIST 
				WHERE 1=1
					AND ACCOUNTPK = :ACCOUNTPK 
					AND POST_SEQ = :POST_SEQ
			</puts>
		</sql>	
		<sql name="home.getStarContCd_StarCont" execute="Select" type="PreparedStatement" desc="스마일 수정">
			<puts>
				SELECT
					STAR_CONT_CD
				FROM
					TB_STAR_CONT
				WHERE
					STAR_CONT_SEQ = :STAR_CONT_SEQ
			</puts>
		</sql>	
		<sql name="home.getSmileFreeCnt_Account" execute="Select" type="PreparedStatement" desc="스마일 수정">
			<puts>
				SELECT SMILE_FREE_CNT FROM TB_CURRENCY_INFO WHERE ACCOUNTPK = :ACCOUNTPK
			</puts>
		</sql>	
		
		
<!-- regSmileSnsHomePost -->
		<sql name="home.getSmileCnt_Account" execute="Select" type="PreparedStatement" desc="스마일 수정">
			<puts>
				SELECT SMILE_CNT FROM TB_CURRENCY_INFO WHERE ACCOUNTPK = :ACCOUNTPK
			</puts>
		</sql>	
		<sql name="home.regSmileFree_SNS" execute="Select" type="PreparedStatement" desc="">
			<puts>
				INSERT INTO TB_SMILE_FREE_USER (ACCOUNTPK, FRND_ACCOUNTPK) SELECT :ACCOUNTPK, :FRND_ACCOUNTPK FROM DUAL
                WHERE NOT EXISTS ( SELECT * FROM TB_SMILE_FREE_USER WHERE ACCOUNTPK = :ACCOUNTPK AND FRND_ACCOUNTPK = :FRND_ACCOUNTPK )

			</puts>
		</sql>	
		<sql name="home.regSmile" execute="Update" type="PreparedStatement" desc="스마일 등록">
			<puts>
				INSERT INTO TB_SMILE_HIST (ACCOUNTPK, POST_SEQ, FRND_ACCOUNTPK) SELECT :ACCOUNTPK, :POST_SEQ, :FRND_ACCOUNTPK FROM DUAL
				WHERE NOT EXISTS ( SELECT * FROM TB_SMILE_HIST WHERE ACCOUNTPK = :ACCOUNTPK AND POST_SEQ = :POST_SEQ )
			</puts>
		</sql>
		<sql name="home.modStarContSmileCnt_StarCont" execute="Update" type="PreparedStatement" desc="스타컨텐츠 스마일개수 업데이트">
			<param name="STAR_CONT_SEQ" 	required="yes" 	desc="" />
			<puts>
				UPDATE TB_STAR_CONT_COUNTER SET
					SMILE_CNT = SMILE_CNT + 1
				WHERE
					<!-- STAR_CONT_SEQ = :STAR_CONT_SEQ -->
					STAR_CONT_SEQ IN ($STAR_CONT_SEQ)
			</puts>
		</sql>
		<sql name="home.modSmileInc_Account" execute="Update" type="PreparedStatement" desc="스마일 수정">
			<param name="ACCOUNTPK" 	required="yes" 	desc="유저 시퀀스" />
			<param name="CNT" 				required="yes" 	desc="" />
			<puts>
				UPDATE TB_CURRENCY_INFO SET
					SMILE_CNT = SMILE_CNT + $CNT
				WHERE
					ACCOUNTPK = $ACCOUNTPK
			</puts>
		</sql>	
		<sql name="home.modSmileFreeInc_Account" execute="Update" type="PreparedStatement" desc="스마일 수정">
			<param name="FRND_ACCOUNTPK" 	required="yes" 	desc="유저 시퀀스" />
			<param name="CNT" 				required="yes" 	desc="" />
			<puts>
				UPDATE TB_CURRENCY_INFO SET
					SMILE_FREE_CNT = SMILE_FREE_CNT + $CNT
				WHERE
					ACCOUNTPK = $FRND_ACCOUNTPK
			</puts>
		</sql>	
		
<!-- regHeartSnsHomeComment -->		
		<sql name="home.getCommentAccountPkByPostSeq" execute="Select" type="PreparedStatement" desc="">
			<puts>
				SELECT
					ACCOUNTPK
				FROM
					TB_HOME_COMMENT
				WHERE 1=1
					AND COMMENT_SEQ = :COMMENT_SEQ
			</puts>
		</sql>	
		<sql name="home.regHeartComment" execute="Update" type="PreparedStatement" desc="하트 등록">
			<puts>
				INSERT INTO TB_COMMENT_HEART_HIST (ACCOUNTPK, COMMENT_SEQ) SELECT :ACCOUNTPK, :COMMENT_SEQ FROM DUAL
                WHERE NOT EXISTS ( SELECT * FROM TB_COMMENT_HEART_HIST WHERE ACCOUNTPK = :ACCOUNTPK AND COMMENT_SEQ = :COMMENT_SEQ )
			</puts>
		</sql>
		<sql name="home.delHeartComment" execute="Update" type="PreparedStatement" desc="하트 취소">
			<puts>
				DELETE FROM TB_COMMENT_HEART_HIST 
				WHERE 1=1
					AND ACCOUNTPK = :ACCOUNTPK 
					AND COMMENT_SEQ = :COMMENT_SEQ
			</puts>
		</sql>	
		
<!-- regSmileSnsHomeComment -->		
		<sql name="home.regSmileComment" execute="Update" type="PreparedStatement" desc="스마일 등록">
			<puts>
				INSERT INTO TB_COMMENT_SMILE_HIST (ACCOUNTPK, COMMENT_SEQ) SELECT :ACCOUNTPK, :COMMENT_SEQ FROM DUAL
                WHERE NOT EXISTS ( SELECT * FROM TB_COMMENT_SMILE_HIST WHERE ACCOUNTPK = :ACCOUNTPK AND COMMENT_SEQ = :COMMENT_SEQ )
			</puts>
		</sql>
		
<!-- regCommentSnsHomePost -->
		<sql name="home.regComment" execute="Update" type="PreparedStatement" desc="댓글 등록">
			<puts>
				INSERT INTO TB_COMMENT
					(POST_SEQ, CONT, DEPTH, PARENT_COMMENT_SEQ)
				VALUES
					(:POST_SEQ, :CONT, 2, 0)
			</puts>
		</sql>	
		<sql name="home.regFileinfo" execute="Update" type="PreparedStatement" desc="파일정보 등록">
			<puts>
				INSERT INTO TB_FILE_INFO
					(POST_SEQ,COMMENT_SEQ,FILE_PATH,FILE_NM,FILE_NUM,FILE_TYPE)
				VALUES
					(:POST_SEQ,:COMMENT_SEQ,:FILE_PATH,:FILE_NM,:FILE_NUM,:FILE_TYPE)	
			</puts>
		</sql>
		<sql name="home.regHomeComment" execute="Update" type="PreparedStatement" desc="홈댓글 등록">
			<puts>
				INSERT INTO TB_HOME_COMMENT
					(ACCOUNTPK, POST_SEQ, COMMENT_SEQ)
				VALUES
					(:ACCOUNTPK, :POST_SEQ, :COMMENT_SEQ)
			</puts>
		</sql>	
		<sql name="home.modStarContCommentCnt_StarCont" execute="Update" type="PreparedStatement" desc="스타컨텐츠 댓글개수 업데이트">
			<param name="STAR_CONT_SEQ" 			required="yes" 	desc="" />
			<puts>
				UPDATE TB_STAR_CONT_COUNTER SET
					COMMENT_CNT = COMMENT_CNT + 1
				WHERE
					<!-- STAR_CONT_SEQ = :STAR_CONT_SEQ -->
					STAR_CONT_SEQ IN ($STAR_CONT_SEQ)
			</puts>
		</sql>
		<sql name="home.modPostWeight_SNS" execute="Update" type="PreparedStatement" desc="">
			<puts>
				<!--
				UPDATE TB_HOME_POST SET
					WEIGHT = WEIGHT + :ADD_WEIGHT
				WHERE ACCOUNTPK = :ACCOUNTPK AND POST_SEQ = :POST_SEQ
				-->
				UPDATE TB_HOME_POST SET
					WEIGHT = WEIGHT + :ADD_WEIGHT
				WHERE POST_SEQ = :POST_SEQ					
			</puts>
		</sql>
		<sql name="home.regSNSQuestCond_SNS" execute="Update" type="PreparedStatement" desc="">
			<param name="ACCOUNTPK" 			required="yes" 	desc="" />
			<param name="TEAM_ACCOUNTPK" 		required="yes" 	desc="" />
			<param name="QUEST_ID" 				required="yes" 	desc="" />
			<param name="COND_TYPE" 			required="yes" 	desc="" />
			<puts>
				INSERT INTO TB_SNSQUEST_COND
					(ACCOUNTPK, TEAM_ACCOUNTPK, QUEST_ID, COND_TYPE, REG_DATE)
				VALUES
					($ACCOUNTPK, $TEAM_ACCOUNTPK, $QUEST_ID, $COND_TYPE, NOW())	
			</puts>
		</sql>

<!-- listUserVideo4jqGrid -->
		<sql name="home.userVideoListTotalCnt" execute="Select" type="PreparedStatement" desc="">
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					COUNT(X1.ACCOUNTPK) CNT
				FROM
					(
					SELECT
						A.ACCOUNTPK
					FROM
						TB_POST_INFO A
						INNER JOIN
						(
						SELECT
							STAR_CONT_SEQ
						FROM
							TB_STAR_CONT_FOLLOW
						WHERE
							ACCOUNTPK = $ACCOUNTPK
							AND VISIT_YN = 0
						) B
						ON A.STAR_CONT_SEQ = B.STAR_CONT_SEQ AND A.LAST_VIDEO_POST_SEQ > 0
					GROUP BY A.ACCOUNTPK	
					) X1
			</puts>
		</sql>
		<sql name="home.userVideoAccountPk4jqGrid" execute="Select" type="PreparedStatement" desc="">
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					GROUP_CONCAT(Z1.ACCOUNTPK) STR_ACCOUNTPK,
					GROUP_CONCAT(Z1.LAST_VIDEO_POST_SEQ) STR_LAST_VIDEO_POST_SEQ
				FROM
					(
					SELECT
						X1.ACCOUNTPK,
						X1.LAST_VIDEO_POST_SEQ
					FROM
						(
						SELECT
							A.ACCOUNTPK,
							MAX(A.LAST_VIDEO_POST_SEQ) LAST_VIDEO_POST_SEQ
						FROM
							TB_POST_INFO A
							INNER JOIN
							(
							SELECT
								STAR_CONT_SEQ
							FROM
								TB_STAR_CONT_FOLLOW
							WHERE
								ACCOUNTPK = $ACCOUNTPK
								AND VISIT_YN = 0
							) B
							ON A.STAR_CONT_SEQ = B.STAR_CONT_SEQ AND A.LAST_VIDEO_POST_SEQ > 0
						GROUP BY A.ACCOUNTPK	
						) X1
					ORDER BY X1.LAST_VIDEO_POST_SEQ DESC
					LIMIT $OFFSET, $ROWS
					) Z1
			</puts>
		</sql>
		<sql name="home.userVideoList" execute="Select" type="PreparedStatement" desc="">
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					ACCOUNTPK,
					ID,
					IFNULL(USER_NM, '') AS USER_NM,
					<!-- PROF_PIC_PATH, -->
					PROF_PIC_NM
				FROM
					TB_USER
				WHERE
					ACCOUNTPK IN ($ACCOUNTPK)
				ORDER BY FIELD(ACCOUNTPK, $ACCOUNTPK)
			</puts>
		</sql>

<!-- listVideoPost4jqGrid -->
		<sql name="home.homePostListVideoFile" execute="Select" type="PreparedStatement" desc="SNS주인 + 팔로우유저 게시물">
			<param name="ACCOUNTPK"			required="yes" 	desc="유저 시퀀스" />
			<param name="POST_SEQ" 			required="yes" 	desc="게시물  시퀀스" />
			<puts>
				SELECT
					X1.*
					,IFNULL(X2.FILE_NM_S, '') AS FILE_NM_S
					,IFNULL(X2.FILE_TYPE_S, '') AS FILE_TYPE_S
					,IF(X3.SMILE_SEQ IS NULL, 0, 1) AS SMILE
					,IF(X4.HEART_SEQ IS NULL, 0, 1) AS HEART
				FROM
					(
					SELECT
						POST_SEQ,
						CONT,
						HEART_CNT,
						SMILE_CNT,
						COMMENT_CNT,
						TIMESTAMPDIFF(HOUR, REG_TIME, NOW()) AS DIFF_TIME,
						REG_TIME
					FROM
						TB_POST
					WHERE 
						POST_SEQ IN ($POST_SEQ)
					) X1
					LEFT OUTER JOIN
					(
					SELECT 
						POST_SEQ, 
						GROUP_CONCAT(FILE_NM ORDER BY FILE_NUM ASC) AS FILE_NM_S, 
						GROUP_CONCAT(FILE_TYPE ORDER BY FILE_NUM ASC) AS FILE_TYPE_S 
					FROM 
						TB_FILE_INFO 
					WHERE 
						POST_SEQ IN ($POST_SEQ) 
						AND FILE_TYPE IN (2, 3)
					GROUP BY POST_SEQ
					) X2
					ON X1.POST_SEQ = X2.POST_SEQ
					LEFT OUTER JOIN
					TB_SMILE_HIST X3
					ON X1.POST_SEQ = X3.POST_SEQ AND X3.ACCOUNTPK = $ACCOUNTPK
					LEFT OUTER JOIN
					TB_HEART_HIST X4
					ON X1.POST_SEQ = X4.POST_SEQ AND X4.ACCOUNTPK = $ACCOUNTPK
				ORDER BY X1.POST_SEQ DESC
			</puts>
		</sql>

<!-- listHeartUser4jqGrid -->
		<sql name="home.heartUserTotalCnt" execute="Select" type="PreparedStatement" desc="">
			<param name="POST_SEQ" 	required="yes" 	desc="" />
			<puts>
				SELECT
					COUNT(HEART_SEQ) CNT
				FROM
					TB_HEART_HIST
				WHERE
					POST_SEQ = $POST_SEQ
			</puts>
		</sql>
		<sql name="home.heartUser4jqGrid" execute="Select" type="PreparedStatement" desc="">
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<param name="POST_SEQ" 			required="yes" 	desc="게시물 시퀀스" />
			<puts>
				SELECT
					GROUP_CONCAT(ACCOUNTPK) AS STR_ACCOUNTPK
				FROM
					TB_HEART_HIST
				WHERE 1=1
					AND POST_SEQ = $POST_SEQ
				<!--  ORDER BY REG_TIME DESC -->
					ORDER BY HEART_SEQ DESC
				LIMIT $OFFSET, $ROWS
			</puts>
		</sql>
		<sql name="home.heartUserList" execute="Select" type="PreparedStatement" desc="">
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					ACCOUNTPK,
					ID,
					IFNULL(USER_NM, '') AS USER_NM,
					<!-- PROF_PIC_PATH, -->
					PROF_PIC_NM,
					AVATAR_CD
				FROM
					TB_USER
				WHERE
					ACCOUNTPK IN ($ACCOUNTPK)
				ORDER BY FIELD(ACCOUNTPK, $ACCOUNTPK)
			</puts>
		</sql>

<!-- listSmileUser4jqGrid -->
		<sql name="home.smileUserTotalCnt" execute="Select" type="PreparedStatement" desc="">
			<param name="POST_SEQ" 	required="yes" 	desc="" />
			<puts>
				SELECT
					COUNT(SMILE_SEQ) CNT
				FROM
					TB_SMILE_HIST
				WHERE
					POST_SEQ = $POST_SEQ
			</puts>
		</sql>
		<sql name="home.smileUser4jqGrid" execute="Select" type="PreparedStatement" desc="">
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<param name="POST_SEQ" 			required="yes" 	desc="게시물 시퀀스" />
			<puts>
				SELECT
					GROUP_CONCAT(ACCOUNTPK) AS STR_ACCOUNTPK
				FROM
					TB_SMILE_HIST
				WHERE 1=1
					AND POST_SEQ = $POST_SEQ
				<!-- ORDER BY REG_TIME DESC -->
					ORDER BY SMILE_SEQ DESC
				LIMIT $OFFSET, $ROWS
			</puts>
		</sql>
		<sql name="home.smileUserList" execute="Select" type="PreparedStatement" desc="">
			<param name="ACCOUNTPK" 	required="yes" 	desc="게시물 검색할 유저 시퀀스" />
			<puts>
				SELECT
					ACCOUNTPK,
					ID,
					IFNULL(USER_NM, '') AS USER_NM,
					<!-- PROF_PIC_PATH, -->
					PROF_PIC_NM,
					AVATAR_CD
				FROM
					TB_USER
				WHERE
					ACCOUNTPK IN ($ACCOUNTPK)
				ORDER BY FIELD(ACCOUNTPK, $ACCOUNTPK)
			</puts>
		</sql>
		
		
		<!-- Autocomplete word -->
		<sql name="home.listAutocompleteWord" execute="Select" type="PreparedStatement" desc="">
			<param name="OFFSET" 			required="yes" 	desc="" />
			<param name="ROWS" 				required="yes" 	desc="" />
			<param name="TAG_NM" 			required="yes" 	desc="태그명" />
			<puts>
				SELECT
					TAG_NM
				FROM
					TB_TAG
				WHERE 1=1
					AND TAG_NM LIKE '$TAG_NM%'
				LIMIT $OFFSET, $ROWS
			</puts>
		</sql>
		
		<sql name="home.getGuestSharePost"  execute="Select" type="PreparedStatement" desc="">
			<param name="POST_SEQ" 	required="yes" 	desc="" />
			<puts>
				SELECT
					A.ID,
					A.CONT,
					A.PROF_PIC_NM,
					IFNULL(A.FILE_NM_S, '') AS FILE_NM_S,
					IFNULL(A.FILE_TYPE_S, '') AS FILE_TYPE_S,
					IF(X3.SMILE_SEQ IS NULL, 0, 1) AS SMILE,
					IF(X4.HEART_SEQ IS NULL, 0, 1) AS HEART
				FROM
				(	
					SELECT 
						A.*,
						B.ID,
						B.PROF_PIC_NM
					FROM
					(
						SELECT 
							X1.ACCOUNTPK,
							X1.POST_SEQ,
							X1.CONT,
							X2.FILE_NM_S,
							X2.FILE_TYPE_S
						FROM
						(	
							SELECT
								ACCOUNTPK,
								POST_SEQ,
								CONT
							FROM TB_POST
							WHERE 	POST_SEQ = $POST_SEQ
						) X1
						LEFT OUTER JOIN
						(
							SELECT 
								POST_SEQ, 
								GROUP_CONCAT(FILE_NM ORDER BY FILE_NUM ASC) AS FILE_NM_S, 
								GROUP_CONCAT(FILE_TYPE ORDER BY FILE_NUM ASC) AS FILE_TYPE_S 
							FROM TB_FILE_INFO 
							WHERE POST_SEQ = $POST_SEQ 
							GROUP BY POST_SEQ
						) X2
						ON X1.POST_SEQ = X2.POST_SEQ
					) A 
					INNER JOIN TB_USER B
					ON B.ACCOUNTPK = A.ACCOUNTPK
				) A		
				LEFT OUTER JOIN
				TB_SMILE_HIST X3
				ON A.POST_SEQ = X3.POST_SEQ AND X3.ACCOUNTPK = A.ACCOUNTPK
				LEFT OUTER JOIN
				TB_HEART_HIST X4
				ON A.POST_SEQ = X4.POST_SEQ AND X4.ACCOUNTPK = A.ACCOUNTPK		
			</puts>
		</sql>		
		
	</module>
</sqlm>
